'use strict';
exports.__esModule = true;
var localeCC = {
    enUS: 'en', enGB: 'en',
    esLA: 'es', esES: 'es',
    ptPT: 'pt', ptBR: 'pt',
    frFR: 'fr',
    deDE: 'de',
    itIT: 'it',
    ruRU: 'ru'
};
function localeToCC(locale) {
    var ret = localeCC.enGB;
    if (locale in localeCC) {
        ret = localeCC[locale];
    }
    return ret;
}
exports.localeToCC = localeToCC;
var dubignore_regexp = {
    en: /\(.*Dub(?:bed)?.*\)|(?:\(RU\))|\(Russian\)/i,
    fr: /\(.*Dub(?:bed)?.*\)|(?:\(RU\))|\(?Doublage.*\)|\(Russian\)?/,
    de: /\(.*isch\)|\(Dubbed\)|\(RU\)|\(Russian\)/
};
function get_diregexp(config) {
    var ret = dubignore_regexp.en;
    if (config.crlang in dubignore_regexp) {
        ret = dubignore_regexp[config.crlang];
    }
    return ret;
}
exports.get_diregexp = get_diregexp;
var episodes_regexp = {
    en: /Episode\s+((OVA)|(PV )?[S0-9][\-P0-9.]*[a-fA-F]?)\s*$/i,
    fr: /Épisode\s+((OVA)|(PV )?[S0-9][\-P0-9.]*[a-fA-F]?)\s*$/i,
    de: /Folge\s+((OVA)|(PV )?[S0-9][\-P0-9.]*[a-fA-F]?)\s*$/i,
    es: /Episodio\s+((OVA)|(PV )?[S0-9][\-P0-9.]*[a-fA-F]?)\s*$/i,
    it: /Episodio\s+((OVA)|(PV )?[S0-9][\-P0-9.]*[a-fA-F]?)\s*$/i,
    pt: /Episódio\s+((OVA)|(PV )?[S0-9][\-P0-9.]*[a-fA-F]?)\s*$/i,
    ru: /Серия\s+((OVA)|(PV )?[S0-9][\-P0-9.]*[a-fA-F]?)\s*$/i
};
function get_epregexp(config) {
    var ret = episodes_regexp.en;
    if (config.crlang in episodes_regexp) {
        ret = episodes_regexp[config.crlang];
    }
    return ret;
}
exports.get_epregexp = get_epregexp;
//# sourceMappingURL=languages.js.map